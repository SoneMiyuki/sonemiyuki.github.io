<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单元测试 on 世界的中心</title>
    <link>https://sonemiyuki.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 单元测试 on 世界的中心</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Tue, 04 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sonemiyuki.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python3单元测试速成</title>
      <link>https://sonemiyuki.github.io/2021/05/python3%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E9%80%9F%E6%88%90/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sonemiyuki.github.io/2021/05/python3%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E9%80%9F%E6%88%90/</guid>
      <description>Python3单元测试unittest及HTML报告生成速成 前置知识：
 Python面向对象基本 单元测试基本知识 Junit等其他测试框架关于测试类、测试方法、测试套件等基本构件的知识  我们先定义一个待测试的类和对象 code.py
class algor: def add(a, b): return a + b 然后开一个测试文件
from code import algor import unittest # 下述文件是从py2拿过来的，需要改造。改造方法在后面 import HTMLTestRunner 编写测试类：
class TestAlgor1(unittest.TestCase): @classmethod # 类前执行 def setUpClass(self): print(&amp;#34;setUpClass&amp;#34;) # 类后执行 @classmethod def tearDownClass(self): print(&amp;#34;tearDownClass&amp;#34;) # 方法前执行 def setUp(self): print(&amp;#34;setUp&amp;#34;) # 方法后执行 def tearDown(self): print(&amp;#34;tearDown&amp;#34;) # 测试方法，一般命名为测试某某某类 def testAdd1(self): self.</description>
    </item>
    
  </channel>
</rss>
